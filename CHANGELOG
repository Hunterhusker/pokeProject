Feb 26, 2022
    I have done some code cleanup and removed a few methods that ended up not being used
    Added entity.h to use like an interface for the different entity types
    Using the struct from entity.h to make an entity map for the screens
    Converted the player into an entity and put it in the new entity map
        This forced me to have to move the entity struct into mapBuilder.h because of the dependencies on each other
    Added a method to handle the numtrainers switch
        made use of the atoi() method which converts char strings of numbers to ints, which is neat
        made my own method to check if the string for the trainer count has any non numeric chars, which has the most disgusting for loop I have seen

Mar 5, 2022
    Removed the entity type and will use the cell type for now for the entities (this will be changed when we move to C++ because of better generic support)
    Moved my code over to a private github repo for editing between my laptop and desktop
    Added .c files to define all of the different enemy types
    Commented out the usage of my userInput() function in my main class since we don't need it
    Added a mhDeleteCell() function since we will need it to remove enemies from the heap if they get killed early
    Change of mind since copying code is bad, entities will share methods since they're all almost the same
        This also means that the player's own methods will be depreciated since it is going to be treated as any old entity for now
    Updated the cost function to determine the cost of movement for all of the new enemy types as well as the player
        Might move this to a different file since it has outgrown the heatMap functions
    Added a generic place entity function that places entities randomly throughout the map, and covers the place player behavior for simplicity
    removed the various .c files for each entity since they share lots of behaviour and can be kept together in one file for the most part
